import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript{
  ext {
    kotlinVersion = '1.4.32'
  }
}

plugins {
  id("org.jetbrains.kotlin.jvm") version "$kotlinVersion"
  id('java-library')
  id("org.jetbrains.dokka") version "0.10.0"
  id("com.diffplug.spotless") version "5.11.1"
  id('jacoco')
  id('idea')

  id('signing')
  id('maven-publish')
  id("io.github.gradle-nexus.publish-plugin") version "1.0.0"
}

apply from: 'jacoco.gradle'
apply from: 'release.gradle'

group = "tech.relaycorp"

repositories {
  mavenCentral()

  // TODO: Remove once all of Dokka's dependencies are available on Maven Central
  jcenter()
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

  api 'tech.relaycorp:cogrpc:[1.1.6,2.0.0)'
  api "io.grpc:grpc-okhttp:[1.32.2,2.0.0)"

  // Testing
  testImplementation "org.junit.jupiter:junit-jupiter:5.7.1"
  testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
  testImplementation "org.mockito:mockito-inline:3.9.0"
}

java {
  withJavadocJar()
  withSourcesJar()
}

tasks.withType(KotlinCompile).configureEach {
  kotlinOptions.jvmTarget = "1.8"
}

tasks.withType(KotlinCompile).all {
  kotlinOptions.freeCompilerArgs = kotlinOptions.freeCompilerArgs + [
    "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
    "-Xuse-experimental=kotlinx.coroutines.FlowPreview",
    "-Xuse-experimental=kotlin.time.ExperimentalTime"
  ]
}

// Documentation

tasks.dokka {
  outputFormat = "html"
  outputDirectory = "$buildDir/javadoc"
}

// Lint

spotless {
  def ktlintUserData = [
    "max_line_length": "100",
    "disabled_rules": "import-ordering"
  ]
  kotlin {
    ktlint("0.36.0").userData(ktlintUserData)
  }
  kotlinGradle {
    ktlint().userData(ktlintUserData)
  }
}
